Given an array of integers A sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order.

Example 1:

Input: [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Example 2:

Input: [-7,-3,2,3,11]
Output: [4,9,9,49,121]


Note:

1 <= A.length <= 10000
-10000 <= A[i] <= 10000
A is sorted in non-decreasing order.



const sortedSquares = (A) => {
    let result = [] //empty array to push new value
    let start = 0 //beginning index of the array
    let end = A.length - 1 // end index of the array
    let position = end //the position in result array of new value

    while (start <= end) { //start point can't be smaller than end point 
        if (A[start] ** 2 > A[end] ** 2) { //if squared start index value is 
                                          //greater than end index value
            result[position--] = A[start++] ** 2 //put it from the end of the result array
        } else {// if squared end value is greater 
                //or equal to the start value
            result[position--] = A[end--] ** 2  //put it from the end of the result array
        }
    }
    
    return result //return transformed sorted new array
};
